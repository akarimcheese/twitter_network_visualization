<!doctype html>
<html>
  <head>
    <title>Crystal Twitter Networks</title>
    <link rel="stylesheet" href="style/main.css">
    
    <script src="https://code.jquery.com/jquery-1.11.3.js"></script>
    <script src="js/network.js"></script>
    
    <script> 
      $(document).ready(function() {
        let twitterNetwork = new Graph(document.getElementsByTagName('svg')[0]);
        twitterNetwork.startForces();
          
        // Open WebSocket connection
        let ws = new WebSocket("wss://" + location.host + "/events");
        // Append each message
        ws.onmessage = function(e) { 
            
            console.log(e.data);
            let data = JSON.parse(e.data);
            $('#websocketlog').append(e.data + "\n") ;
            console.log(data);
            
            if (data.node) {
                twitterNetwork.addNode(data.node, data.img);
            } else if (data.source) {
                twitterNetwork.addEdge(data.source, data.target);
            } else if (data.message) {
                console.log(data.message);
            }
        };
        $("form").bind('submit', function(e) {
          let message = $('#msg').val().trim();
          ws.send(message);
          $('#msg').val(''); $('#msg').focus();
          e.preventDefault();
        });
        window.onbeforeunload = function() {
          websocket.onclose = function () {}; // disable onclose handler first
          websocket.close()
        };
        
        $("#circleDrift").change(function() {
          twitterNetwork.circleDrift = parseFloat(this.value)*(Math.PI/180);
        });
        
        $("#nodeRepulsion").change(function() {
          twitterNetwork.nodeRepulsionConstant = parseFloat(this.value);
        });
        
        $("#wallRepulsion").change(function() {
          twitterNetwork.wallRepulsionConstant = parseFloat(this.value);
        });
        
        $("#springForce").change(function() {
          twitterNetwork.springConstant = parseFloat(this.value);
        });
        
        $("#springLength").change(function() {
          twitterNetwork.springLength = parseFloat(this.value);
        });
        
        $("#interfaceToggle").click(function() {
          button = $("#interfaceToggle");
          
          if (button.html() == '-') {
            $("#interfaceBody").hide();
            button.html('+');
          }
          else if (button.html() == '+') {
            $("#interfaceBody").show();
            button.html('-');
          }
        });
        
        $('input[type=radio][name=graphMode]').change(function () {
            if (this.value == 'circle') {
                twitterNetwork.startCircle();
            }
            else if (this.value == 'force') {
                twitterNetwork.startForces();
            }
        });
      });
      
      
    </script>
  </head>
  <body>
    <svg width="100%" height="100%">
        <defs>
          <marker id="arrowhead" markerWidth="10" markerHeight="6" 
    refX="0" refY="3" orient="auto">
            <polygon points="0 0, 10 3, 0 6"/>
          </marker>
        </defs>
        
        <rect x="0" y="0" width="100%" height="100%" fill="#DFE1E1"/>
        <g id="edges"></g>
        <g id="nodes"></g>
    </svg>
    <div id="interface">
      <button id="interfaceToggle">-</button>
      <div id="interfaceBody">
        <form>
          <input id='msg' />
          <input type="submit" value="Add User">
        </form>
        <div id='graphMode'>
          <h4>Graph Mode</h4>
          <input type='radio' name='graphMode' value='force' checked>Force Directed<br>
          <input type='radio' name='graphMode' value='circle'>Circle<br>
        </div>
        <div id='config'>
          <h4>Graph Configuration</h4>
          <label>Circle Drift (in degrees)</label>
          <input id="circleDrift" type="number" value="0.02"> <br>
          <label>Node Repulsion</label> 
          <input id="nodeRepulsion" type="number" value="50000"> <br>
          <label>Wall Repulsion</label>
          <input id="wallRepulsion" type="number" value="5000"> <br>
          <label>Spring Force</label>
          <input id="springForce" type="number" value="0.01"> <br>
          <label>Spring Length</label>
          <input id="springLength" type="number" value=""> <br>
        </div>
        <div>
          <h4>Websocket Logs</h4>
          <pre id='websocketlog'></pre>
        </div>
      </div>
    </div>
  </body>
</html>